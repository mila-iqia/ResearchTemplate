[project]
name = "research_project_template"
version = "0.0.1"
description = "Research Project Template"
authors = [
    { name = "Fabrice Normandin", email = "normandf@mila.quebec" },
    { name = "César Miguel Valdez Córdova", email = "cesar.valdez@mila.quebec" },
]
dependencies = [
    "torch==2.4.1",
    "jax==0.4.33",
    "jaxlib==0.4.33",
    "hydra-core>=1.3.2",
    "wandb>=0.17.6",
    "lightning>=2.4.0",
    "torchvision>=0.19.0",
    "rich>=13.7.1",
    "tqdm>=4.66.5",
    "hydra-zen==0.13.1rc1",
    "gdown>=5.2.0",
    "hydra-submitit-launcher>=1.2.0",
    "hydra-colorlog>=1.2.0",
    "matplotlib>=3.9.2",
    "torch-jax-interop>=0.0.7",
    "pydantic>=2.8.2",
    "simple-parsing>=0.1.5",
    "datasets>=2.21.0",
    "transformers>=4.44.0",
    "scikit-learn>=1.5.1",
    "evaluate>=0.4.2",
    # Pin the version to work around https://github.com/plotly/Kaleido/issues/156.
    # Only pinning this so that we can install the hydra-orion-sweeper.
    "kaleido==0.2.1",
    "hydra-orion-sweeper>=1.6.4",
    "gymnax @ git+https://www.github.com/lebrice/gymnax@fix-classic-control-rendering",
    "rejax>=0.1.0",
    "xtils[jitpp] @ git+https://github.com/jessefarebro/xtils",
    "gymnasium[classic-control]>=0.29.1",
    "mkdocs>=1.6.1",
    "mkdocstrings[python]>=0.26.2",
    "remote-slurm-executor",
    "watchdog>=5.0.3",
    "hydra-auto-schema",
]
readme = "README.md"
requires-python = ">= 3.10"

[project.entry-points."mkdocs.plugins"]
custom_autoref_plugin = "project.utils.autoref_plugin:CustomAutoRefPlugin"


[project.optional-dependencies]
docs = [
    "mkdocs-gen-files>=0.5.0",
    "mkdocs-awesome-pages-plugin>=2.9.3",
    "mkdocs-literate-nav>=0.6.1",
    "mkdocs-material>=9.5.31",
    "black>=24.8.0",
    "mkdocs-video>=1.5.0",
    "mkdocs-section-index>=0.3.9",
    "mkdocs-macros-plugin>=1.0.5",
]
gpu = [
    "jax[cuda12]>=0.4.31",
    "nvidia-cublas-cu12==12.1.3.1",
    "nvidia-cuda-cupti-cu12==12.1.105",
    "nvidia-cuda-nvcc-cu12==12.6.68",
    "nvidia-cuda-nvrtc-cu12==12.1.105",
    "nvidia-cuda-runtime-cu12==12.1.105",
    "nvidia-cudnn-cu12==9.1.0.70",
    "nvidia-cufft-cu12==11.0.2.54",
    "nvidia-curand-cu12==10.3.2.106",
    "nvidia-cusolver-cu12==11.4.5.107",
    "nvidia-cusparse-cu12==12.1.0.106",
    "nvidia-nccl-cu12==2.20.5",
    "nvidia-nvjitlink-cu12==12.6.68",
    "nvidia-nvtx-cu12==12.1.105",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.pytest.ini_options]
testpaths = ["project", "docs"]
norecursedirs = [".venv"]
# Required to use torch deterministic mode.
env = ["CUBLAS_WORKSPACE_CONFIG=:4096:8"]
addopts = [
    # todo: look into using https://github.com/scientific-python/pytest-doctestplus
    "--doctest-modules",
    "--stats-rounding-precision=3",
    # "--slow",
    # "--regen-all",
]
markers = [
    "incremental: incremental testing support",
    "parametrize_when_used: Parametrize a test only when the argument is used.",
]

[tool.ruff]
line-length = 99
indent-width = 4
# Add the pyupgrade and isort options in addition to the defaults.
lint.select = ["E4", "E7", "E9", "F", "I", "UP"]


[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["project"]

[tool.uv]
managed = true
dev-dependencies = [
    "mktestdocs>=0.2.2",
    "pre-commit<4.0.0",
    "pytest-benchmark>=4.0.0",
    "pytest-cov>=5.0.0",
    "pytest-env>=1.1.3",
    "pytest-regressions>=2.5.0",
    "pytest-skip-slow>=0.0.5",
    "pytest-testmon>=2.1.1",
    "pytest-timeout>=2.3.1",
    "pytest-xdist>=3.6.1",
    "pytest>=8.3.2",
    "ruff>=0.6.0",
    "tensor-regression>=0.0.8",
]

[tool.uv.sources]
remote-slurm-executor = { git = "https://github.com/lebrice/remote-slurm-executor", branch = "master" }
hydra-auto-schema = { git = "https://github.com/lebrice/hydra-auto-schema", rev = "master" }

# [tool.uv.tasks]
# serve-docs = "mkdocs serve"
# check_torch_gpu = "python -c 'import torch; print(torch.cuda.is_available())'"
# check_jax_gpu = "python -c 'import jax.numpy as jnp; print(jnp.zeros(1).devices())'"
# tests = "pytest -x -v"
# auto_schema = "python project/utils/auto_schema.py ."
