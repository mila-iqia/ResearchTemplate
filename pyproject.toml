[project]
name = "research_project_template"
version = "0.0.1"
description = "Research Project Template"
authors = [
    { name = "Fabrice Normandin", email = "normandf@mila.quebec" },
    { name = "César Miguel Valdez Córdova", email = "cesar.valdez@mila.quebec" },
]
dependencies = [
    "torch>=2.4.0",
    "jax>=0.4.31",
    "hydra-core>=1.3.2",
    "wandb>=0.17.6",
    "lightning>=2.4.0",
    "torchvision>=0.19.0",
    "rich>=13.7.1",
    "tqdm>=4.66.5",
    "hydra-zen>=0.13.0",
    "gdown>=5.2.0",
    "hydra-submitit-launcher>=1.2.0",
    "hydra-colorlog>=1.2.0",
    "matplotlib>=3.9.2",
    "torch-jax-interop>=0.0.7",
    "pydantic>=2.8.2",
]
readme = "README.md"
requires-python = ">= 3.10"

[project.optional-dependencies]
docs = [
    "mkdocstrings[python]>=0.25.2",
    "mkdocs-gen-files>=0.5.0",
    "mkdocs-awesome-pages-plugin>=2.9.3",
    "mkdocs-literate-nav>=0.6.1",
    "mkdocs-material>=9.5.31",
    "black>=24.8.0",
    "mkdocs>=1.6.0",
]
gpu = ["jax[cuda12]>=0.4.31"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.pytest.ini_options]
testpaths = ["project", "docs"]
norecursedirs = [".venv"]
# todo: look into using https://github.com/scientific-python/pytest-doctestplus
addopts = ["--doctest-modules", "--stats-rounding-precision=3"]
markers = [
    "incremental: incremental testing support",
    "parametrize_when_used: Parametrize a test only when the argument is used.",
]


[tool.ruff]
line-length = 99
indent-width = 4
# Add the pyupgrade and isort options in addition to the defaults.
lint.select = ["E4", "E7", "E9", "F", "I", "UP"]


[tool.rye]
managed = true
dev-dependencies = [
    "pytest>=8.3.2",
    "pytest-timeout>=2.3.1",
    "pytest-regressions>=2.5.0",
    "pytest-skip-slow>=0.0.5",
    "pytest-env>=1.1.3",
    "pytest-xdist>=3.6.1",
    "ruff>=0.6.0",
    "pytest-benchmark>=4.0.0",
    "pytest-cov>=5.0.0",
    "tensor-regression>=0.0.6",
    "pytest-testmon>=2.1.1",
    "pre-commit>=3.8.0",
    "mktestdocs>=0.2.2",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/researchtemplate"]

[tool.rye.scripts]
serve-docs = "mkdocs serve"
check_torch_gpu = "python -c 'import torch; print(torch.cuda.is_available())'"
check_jax_gpu = "python -c 'import jax.numpy as jnp; print(jnp.zeros(1).devices())'"
tests = "pytest -x -v"
