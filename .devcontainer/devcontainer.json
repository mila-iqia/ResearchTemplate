// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/python
{
	"name": "Research Template",
	// Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
	"image": "mcr.microsoft.com/devcontainers/python:1-3.12-bullseye",
	// Features to add to the dev container. More info: https://containers.dev/features.
	"features": {
		"ghcr.io/devcontainers-contrib/features/pdm:2": {},
		"ghcr.io/devcontainers-contrib/features/pre-commit:2": {},
		"ghcr.io/devcontainers-contrib/features/apt-get-packages": {
			"packages": "vim"
		}
	},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Configure tool-specific properties.
	"customizations": {
		// TODO: look into this one.
		"codespaces": {},
		// Configure properties specific to VS Code.
		"vscode": {
			// Set *default* container specific settings.json values on container create.
			"settings": {
				"[python]": {
					"editor.codeActionsOnSave": {
						"source.fixAll.ruff": "always",
						"source.organizeImports.ruff": "explicit"
					},
					"editor.defaultFormatter": "charliermarsh.ruff",
					"defaultInterpreterPath": ".venv/bin/python",
					"editor.formatOnType": true
				},
				"files.exclude": {
					"**/.git": true,
					"**/.svn": true,
					"**/.hg": true,
					"**/CVS": true,
					"**/.DS_Store": true,
					"**/Thumbs.db": true,
					".venv": true,
					".pdm.toml": true,
					".pdm-python": true,
					".pdm-build": true,
					".ruff_cache": true
				}
			},
			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"ms-python.python",
				"ms-python.vscode-pylance",
				"charliermarsh.ruff",
				"GitHub.copilot",
				"knowsuchagency.pdm-task-provider",
				"GitHub.copilot-chat"
			]
		}
	},
	"containerEnv": {
		"SCRATCH": "/home/vscode/scratch"
	},
	// Mount a "$SCRATCH" directory in the host to ~/scratch in the container.
	// Mount /network to use this to mount a "$SCRATCH" directory in the host to ~/scratch in the container.
	"mounts": [
		// https://code.visualstudio.com/remote/advancedcontainers/add-local-file-mount
		"source=${localEnv:HOME}/.cache/pdm,target=/home/vscode/.pdm_install_cache,type=bind,consistency=cached",
		"source=${localEnv:SCRATCH},target=/home/vscode/scratch,type=bind,consistency=cached",
		"source=${localEnv:NETWORK_DIR:/network},target=/network,type=bind,readonly"
	],

	"runArgs": [
		"--gpus",
		"all",
		"--ipc=host"
	],
	// create the pdm cache dir on the host machine if it doesn exist yet so the mount above
	// doesn't fail.
	"initializeCommand": "mkdir -p ~/.cache/pdm",
	// NOTE: Getting some permission issues with the .cache dir if mounting .cache/pdm to
	// .cache/pdm in the container. Therefore, here I'm making a symlink from ~/.cache/pdm to
	// ~/.pdm_install_cache so the ~/.cache directory is writeable by the container.
	"onCreateCommand": "mkdir -p ~/.cache && ln -s /home/vscode/.pdm_install_cache /home/vscode/.cache/pdm",
	"updateContentCommand": "",

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "pip3 install --user -r requirements.txt",
	"postCreateCommand": {
		// "pdm-pep-582": "pdm --pep582 >> ~/.bash_profile",
		"pdm": "pdm config install.cache true && pdm config venv.in_project false && pdm install",
		"pre-commit": "pre-commit install --install-hooks"
		// "activate_venv": "source .venv/bin/activate"
	}
	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "root"
}
